{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./my.local.storage.service\";\nimport * as i2 from \"ngx-permissions\";\nexport class MyRoleService {\n  constructor(localStorageService, ngxRoleService) {\n    this.localStorageService = localStorageService;\n    this.ngxRoleService = ngxRoleService;\n  }\n  getRolesFromJwt() {\n    const token = this.localStorageService.get('jwt');\n    if (token) {\n      const decodedToken = jwt_decode(token);\n      return decodedToken['role'] || [];\n    } else {\n      return [];\n    }\n  }\n  setRoles(roles) {\n    this.ngxRoleService.addRoles(roles);\n  }\n  getRoles() {\n    return this.ngxRoleService.getRoles();\n  }\n  flushRoles() {\n    this.n;\n  }\n}\nMyRoleService.ɵfac = function MyRoleService_Factory(t) {\n  return new (t || MyRoleService)(i0.ɵɵinject(i1.MyLocalStorageService), i0.ɵɵinject(i2.NgxRolesService));\n};\nMyRoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyRoleService,\n  factory: MyRoleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,OAAOA,UAAU,MAAM,YAAY;;;;AAOnC,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,mBAA0C,EAC1CC,cAA+B;IAD/B,wBAAmB,GAAnBD,mBAAmB;IACnB,mBAAc,GAAdC,cAAc;EAAqB;EAEvDC,eAAe;IACb,MAAMC,KAAK,GAAG,IAAI,CAACH,mBAAmB,CAACI,GAAG,CAAC,KAAK,CAAC;IACjD,IAAID,KAAK,EAAE;MACT,MAAME,YAAY,GAAQR,UAAU,CAACM,KAAK,CAAC;MAC3C,OAAOE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE;KAClC,MAAM;MACL,OAAO,EAAE;;EAEb;EAEAC,QAAQ,CAACC,KAAe;IACtB,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACD,KAAK,CAAC;EACrC;EAEAE,QAAQ;IACN,OAAO,IAAI,CAACR,cAAc,CAACQ,QAAQ,EAAE;EACvC;EAEAC,UAAU;IACR,IAAI,CAACC,CAAC;EACR;;AAzBWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAc,SAAbd,aAAa;EAAAe,YAFZ;AAAM","names":["jwt_decode","MyRoleService","constructor","localStorageService","ngxRoleService","getRolesFromJwt","token","get","decodedToken","setRoles","roles","addRoles","getRoles","flushRoles","n","factory","providedIn"],"sourceRoot":"","sources":["D:\\Inforce\\UrlShortener\\UrlShortener\\ClientApp\\src\\app\\services\\permission.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MyLocalStorageService } from './my.local.storage.service';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { NgxRolesService } from 'ngx-permissions';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyRoleService {\r\n\r\n  constructor(private localStorageService: MyLocalStorageService,\r\n              private ngxRoleService: NgxRolesService) { }\r\n\r\n  getRolesFromJwt(): string[] {\r\n    const token = this.localStorageService.get('jwt'); \r\n    if (token) {\r\n      const decodedToken: any = jwt_decode(token);\r\n      return decodedToken['role'] || [];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  setRoles(roles: string[]) {\r\n    this.ngxRoleService.addRoles(roles);\r\n  }\r\n\r\n  getRoles(): string[] {\r\n    return this.ngxRoleService.getRoles();\r\n  }\r\n\r\n  flushRoles() {\r\n    this.n\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}