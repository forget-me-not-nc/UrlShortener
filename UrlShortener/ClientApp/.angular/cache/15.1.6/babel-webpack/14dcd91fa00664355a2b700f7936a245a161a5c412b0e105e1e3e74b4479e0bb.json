{"ast":null,"code":"import { ApiConfig } from '../config/api.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UrlService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(ApiConfig.URL_API);\n  }\n  get(id) {\n    return this.http.get(ApiConfig.URL_API + id.toString());\n  }\n  delete(id) {\n    return this.http.delete(ApiConfig.URL_API + id.toString(), {\n      observe: 'response'\n    });\n  }\n}\nUrlService.ɵfac = function UrlService_Factory(t) {\n  return new (t || UrlService)(i0.ɵɵinject(i1.HttpClient));\n};\nUrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UrlService,\n  factory: UrlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,sBAAsB;;;AAKhD,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASL,SAAS,CAACM,OAAO,CAAC;EACjD;EAEAD,GAAG,CAACE,EAAU;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAOL,SAAS,CAACM,OAAO,GAAGC,EAAE,CAACC,QAAQ,EAAE,CAAC;EAC/D;EAEAC,MAAM,CAACF,EAAU;IACf,OAAO,IAAI,CAACJ,IAAI,CAACM,MAAM,CACrBT,SAAS,CAACM,OAAO,GAAGC,EAAE,CAACC,QAAQ,EAAE,EACjC;MAAEE,OAAO,EAAE;IAAU,CAAE,CACxB;EACH;;AAhBWT,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAU,SAAVV,UAAU;EAAAW,YAFT;AAAM","names":["ApiConfig","UrlService","constructor","http","getAll","get","URL_API","id","toString","delete","observe","factory","providedIn"],"sourceRoot":"","sources":["D:\\Inforce\\UrlShortener\\UrlShortener\\ClientApp\\src\\app\\services\\url.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Url } from '../models/url.model'  \r\nimport { ApiConfig } from '../config/api.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<IUrl[]> {\r\n    return this.http.get<IUrl[]>(ApiConfig.URL_API);\r\n  }\r\n\r\n  get(id: number): Observable<IUrl> {\r\n    return this.http.get<IUrl>(ApiConfig.URL_API + id.toString());\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<any>> {\r\n    return this.http.delete<HttpResponse<any>>(\r\n      ApiConfig.URL_API + id.toString(),\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  //create(obj: ICreateTask): Observable<IUrl> {\r\n  //  return this.http.post<IUrl>(ApiConfig.URL_API, obj);\r\n  //}\r\n\r\n  //update(obj: IUrl): Observable<IUrl> {\r\n  //  return this.http.put<IUrl>(ApiConfig.URL_API, obj);\r\n  //}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}