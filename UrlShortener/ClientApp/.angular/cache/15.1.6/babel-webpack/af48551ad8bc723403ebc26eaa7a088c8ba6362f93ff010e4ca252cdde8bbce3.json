{"ast":null,"code":"import { ApiConfig } from '../config/api.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UrlService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(ApiConfig.URL_API);\n  }\n  get(id) {\n    return this.http.get(ApiConfig.URL_API + '' + id);\n  }\n  getAllByUserId(id) {\n    return this.http.get(ApiConfig.URL_API + 'user/' + id);\n  }\n  create(obj) {\n    return this.http.post(ApiConfig.URL_API, obj);\n  }\n  update(obj) {\n    return this.http.put(ApiConfig.URL_API, obj);\n  }\n  delete(id) {\n    return this.http.delete(ApiConfig.URL_API + id.toString(), {\n      observe: 'response'\n    });\n  }\n}\nUrlService.ɵfac = function UrlService_Factory(t) {\n  return new (t || UrlService)(i0.ɵɵinject(i1.HttpClient));\n};\nUrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UrlService,\n  factory: UrlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,sBAAsB;;;AAMhD,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQL,SAAS,CAACM,OAAO,CAAC;EAChD;EAEAD,GAAG,CAACE,EAAU;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAML,SAAS,CAACM,OAAO,GAAG,EAAE,GAAGC,EAAE,CAAC;EACxD;EAEAC,cAAc,CAACD,EAAU;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAQL,SAAS,CAACM,OAAO,GAAG,OAAO,GAAGC,EAAE,CAAC;EAC/D;EAEAE,MAAM,CAACC,GAAmB;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAMX,SAAS,CAACM,OAAO,EAAEI,GAAG,CAAC;EACpD;EAEAE,MAAM,CAACF,GAAU;IACf,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAMb,SAAS,CAACM,OAAO,EAAEI,GAAG,CAAC;EACnD;EAEAI,MAAM,CAACP,EAAU;IACf,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CACrBd,SAAS,CAACM,OAAO,GAAGC,EAAE,CAACQ,QAAQ,EAAE,EACjC;MAAEC,OAAO,EAAE;IAAU,CAAE,CACxB;EACH;;AA5BWf,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAgB,SAAVhB,UAAU;EAAAiB,YAFT;AAAM","names":["ApiConfig","UrlService","constructor","http","getAll","get","URL_API","id","getAllByUserId","create","obj","post","update","put","delete","toString","observe","factory","providedIn"],"sourceRoot":"","sources":["D:\\Inforce\\UrlShortener\\UrlShortener\\ClientApp\\src\\app\\services\\url.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Url } from '../models/url.model'  \r\nimport { ApiConfig } from '../config/api.config';\r\nimport { CreateUrlModel, UpsertUrlModel } from '../models/create.url.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Url[]> {\r\n    return this.http.get<Url[]>(ApiConfig.URL_API);\r\n  }\r\n\r\n  get(id: number): Observable<Url> {\r\n    return this.http.get<Url>(ApiConfig.URL_API + '' + id);\r\n  }\r\n\r\n  getAllByUserId(id: number): Observable<Url[]> {\r\n    return this.http.get<Url[]>(ApiConfig.URL_API + 'user/' + id);\r\n  }\r\n\r\n  create(obj: CreateUrlModel): Observable<Url> {\r\n    return this.http.post<Url>(ApiConfig.URL_API, obj);\r\n  }\r\n\r\n  update(obj: Updat): Observable<Url> {\r\n    return this.http.put<Url>(ApiConfig.URL_API, obj);\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<any>> {\r\n    return this.http.delete<HttpResponse<any>>(\r\n      ApiConfig.URL_API + id.toString(),\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}